package com.myapp.restaurant.dao;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

import com.myapp.restaurant.model.Restaurant;

public class RestaurantDao {

	
	public Restaurant saveRestaurant(Restaurant  restaurant)
	{
		SessionFactory factory=new Configuration().configure().buildSessionFactory();
		Session session= factory.openSession();
		Transaction tx= session.beginTransaction();
		session.save(restaurant);
		tx.commit();
		return restaurant;
	}
	
	public Restaurant getRestaurantById(int restId)
	{
		SessionFactory factory=new Configuration().configure().buildSessionFactory();
		Session session= factory.openSession();
		Transaction tx= session.beginTransaction();
		Restaurant restaurant= session.get(Restaurant.class,restId);
		tx.commit();
		if(restaurant!=null)
		return restaurant;
		else
			return null;
	}

	
	
	public List<Restaurant> getRestaurants()
	{
		SessionFactory factory=new Configuration().configure().buildSessionFactory();
		Session session= factory.openSession();
		Transaction tx= session.beginTransaction();
		
	List<Restaurant> restaurants=	session.createQuery("from Restaurant").list();
		tx.commit();
		
		if(restaurants.size()==0 )
			return null;
		else
			return 
					restaurants;
	}
	
	
}


---------service 


package com.myapp.restaurant.service;

import java.util.List;

import com.myapp.restaurant.dao.RestaurantDao;
import com.myapp.restaurant.model.Restaurant;

public class RestaurantService {

	public static void main(String[] args) {
		
	Restaurant restaurant=new Restaurant(4, "banaglore restaurant", "R t Nagar Bangalore");
	
	RestaurantDao  dao=new RestaurantDao();
//	dao.saveRestaurant(restaurant);
//	
//	System.out.println("data saved");

// Restaurant rest=	dao.getRestaurantById(4);
//	if(rest!=null)
// System.out.println(rest);
//	else
//		System.out.println("cannot find rest ");
//	}

	
	
	 List<Restaurant> rest=	dao.getRestaurants();
		if(rest!=null)
		{
	 rest.forEach(x->{System.out.println(x);});
		}	
	 else
			System.out.println("cannot find rests ");
		}

	
	
	
}








