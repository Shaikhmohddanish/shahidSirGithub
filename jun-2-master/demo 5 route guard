--> ng g guard catering


------------login.comp.ts 

import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent implements OnInit {

  constructor(private router:Router) { }

  username:string='';
  password:string='';

  ngOnInit(): void {
  }

  validate()
  {

    if(this.username=='root' && this.password=='123')
    {
     localStorage.setItem('userType','prime'); 
      alert('valid');
      this.router.navigate(['view']);
      
    }
   else if(this.username=='user' && this.password=='123')
    {
      localStorage.setItem('userType','basic');
      alert('valid');
      this.router.navigate(['view']);
      
    }

    else{
      alert('invalid');
    //do not route
    }

  }

}

------------------------catering.guard.ts 

import { Injectable } from '@angular/core';
import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class CateringGuard implements CanActivate {
  
  canActivate(
    route: ActivatedRouteSnapshot,
    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {
    
      let userType=localStorage.getItem('userType');
    
      if(userType=='prime')
      {
        return true;
      }
      else{
      return false;
      }
    }
  
}

----------------app-routing.module.ts 


import { NgModule } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';
import { AddStudentComponent } from './add-student/add-student.component';
import { CateringGuard } from './catering.guard';
import { ErrorComponent } from './error/error.component';
import { LoginComponent } from './login/login.component';
import { CateringComponent } from './services/catering/catering.component';
import { LaundryComponent } from './services/laundry/laundry.component';
import { ServicesComponent } from './services/services.component';
import { WaterComponent } from './services/water/water.component';
import { ViewStudentComponent } from './view-student/view-student.component';

const routes: Routes = [
  {path:'',redirectTo:'login',pathMatch:'full'},
  {path:'add',component:AddStudentComponent},
  {path:'view',component:ViewStudentComponent},
  {path:'login',component:LoginComponent},
  {path:'service',component:ServicesComponent,
  children:[
    {path:'water',component:WaterComponent},
    {path:'catering',component:CateringComponent,canActivate:[CateringGuard]},
    {path:'laundry',component:LaundryComponent}

  ]
},
  {path:'**',component:ErrorComponent}
  
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }











