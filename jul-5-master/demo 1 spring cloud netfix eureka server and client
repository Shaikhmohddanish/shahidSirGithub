download a spring boot project with 

-> eureka server 

--------------eureka server  main .. DO NOT COPY PASTE ONLY ADD @EnableEurekaServer

package com.example.eurekaserver;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;

@EnableEurekaServer
@SpringBootApplication
public class Wipro63EurekaserverApplication {

	public static void main(String[] args) {
		SpringApplication.run(Wipro63EurekaserverApplication.class, args);
	}

}

-----------app.prop 


server.port=8761
#8761 i default port for eureka server .. the client will connect to this port without any extra configuration
eureka.client.fetch-registry=false
eureka.client.register-with-eureka=false


-------------------run as springboot app and test it 

http://localhost:8761/



-- modify the pom for both eureka clients (foodservice , menuservice)

-------------------------------------------------pom.xml 


<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.9</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>wipro63-foodservice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>wipro63-foodservice</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>1.8</java.version>
	<!-- new line added for spring cloud -->

    	<spring-cloud.version>2021.0.3</spring-cloud.version>
	
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

<!-- new dependency added for spring cloud -->
	<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

<!-- new tag dependency management added for spring cloud -->

<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>


---------------------------------main food 

package com.example.foodservice;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.netflix.eureka.EnableEurekaClient;

@EnableEurekaClient
@SpringBootApplication
public class Wipro63FoodserviceApplication {

	public static void main(String[] args) {
		SpringApplication.run(Wipro63FoodserviceApplication.class, args);
	}

}


--------------app.prop 


server.port=1234
spring.application.name=food



------------------------menu main 

package com.example.menuservice;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.client.loadbalancer.LoadBalanced;
import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
import org.springframework.context.annotation.Bean;
import org.springframework.web.client.RestTemplate;

@EnableEurekaClient
@SpringBootApplication
public class Wipro63MenuserviceApplication {

	public static void main(String[] args) {
		SpringApplication.run(Wipro63MenuserviceApplication.class, args);
	}

	
	@LoadBalanced
	@Bean
	public RestTemplate getTemp()
	{
		return new RestTemplate();
	}
	
	
}

------app.prop 

server.port=1111
spring.application.name=menu


--------------controller 

package com.example.menuservice.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.example.menuservice.model.Food;


@RestController
@RequestMapping("menuservice")
public class MenuController {

	@Autowired
	RestTemplate restTemplate;
	
	@GetMapping
	public ResponseEntity<List<Food>> getFoodItem()
	{
	List<Food> foods=restTemplate.getForEntity("http://food/foodservice/getitems", List.class).getBody();
			
		return new ResponseEntity<List<Food>>(foods,HttpStatus.OK);
	}
	
	
	@PostMapping
	public ResponseEntity<Food> addFoodItem(@RequestBody Food food)
	{
		
	Food addfood=restTemplate.postForEntity("http://food/foodservice/additem", food, Food.class).getBody(); 
			
		return new ResponseEntity<Food>(addfood,HttpStatus.OK);
	}
	
}

---------------------urls 

post 
http://localhost:1111/menuservice


{
"itemId":4,
"name":"chicken butter masala",
"price":550

}


get
http://localhost:1111/menuservice
















